- id: genqr.keywords.v1
  method_family: genqr
  version: 1
  introduced_by: "Generic keywords prompt (baseline)"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Suggest keywords to improve retrieval for this query:
      "{query}"
      Return only keywords.
  notes: |
    Minimal keyword expansion; consumers split by comma.

- id: genqr.keywords.variant.v1
  method_family: genqr
  version: 1
  introduced_by: "Variant phrasing"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion"]
  template:
    system: |
      Produce a short list of expansion terms, comma-separated.
    user: |
      Recommend expansion terms that would improve search results for:
      "{query}"

- id: genqr_ensemble.inst1.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 1"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Improve the search effectiveness by suggesting expansion terms for the query:
      "{query}"

- id: genqr_ensemble.inst2.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 2"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Recommend expansion terms for the query to improve search results:
      "{query}"

- id: genqr_ensemble.inst3.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 3"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Improve the search effectiveness by suggesting useful expansion terms for the query:
      "{query}"

- id: genqr_ensemble.inst4.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 4"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Maximize search utility by suggesting relevant expansion phrases for the query:
      "{query}"

- id: genqr_ensemble.inst5.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 5"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Enhance search efficiency by proposing valuable terms to expand the query:
      "{query}"

- id: genqr_ensemble.inst6.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 6"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Elevate search performance by recommending relevant expansion phrases for the query:
      "{query}"

- id: genqr_ensemble.inst7.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 7"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Boost the search accuracy by providing helpful expansion terms to enrich the query:
      "{query}"

- id: genqr_ensemble.inst8.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 8"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Increase the search efficacy by offering beneficial expansion keywords for the query:
      "{query}"

- id: genqr_ensemble.inst9.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 9"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Optimize search results by suggesting meaningful expansion terms to enhance the query:
      "{query}"

- id: genqr_ensemble.inst10.v1
  method_family: genqr_ensemble
  version: 1
  introduced_by: "GenQR ensemble instruction variant 10"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["keywords", "expansion", "ensemble"]
  template:
    system: |
      You output only comma-separated keywords. No sentences.
    user: |
      Enhance search outcomes by recommending beneficial expansion terms to supplement the query:
      "{query}"

- id: query2doc.zeroshot.v1
  method_family: query2doc
  version: 1
  introduced_by: "Nogueira et al., 2019 style pseudo-doc"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["pseudo-document", "zs"]
  template:
    system: |
      Write a short, relevant passage to the user's query.
    user: |
      Query: "{query}"
      Write a 3-5 sentence passage that would be highly relevant.

- id: query2doc.cot.v1
  method_family: query2doc
  version: 1
  introduced_by: "Chain-of-thought pseudo-doc"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["pseudo-document", "cot"]
  template:
    system: |
      Reason briefly then write a concise relevant passage.
    user: |
      Think step-by-step about the information need for: "{query}"
      Then write a 3-5 sentence passage that would be highly relevant.

- id: qa_expand.subq.v1
  method_family: qa_expand
  version: 1
  introduced_by: "Sub-question generator"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["qa", "decomposition"]
  template:
    system: |
      You are a helpful assistant. Based on the following query, generate 3 possible related questions that someone might ask.
    user: |
      Break the query into sub-questions: "{query}"

- id: qa_expand.answer.v1
  method_family: qa_expand
  version: 1
  introduced_by: "Answer with given contexts"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["qa"]
  template:
    system: |
      You are a knowledgeable assistant. The user provides 3 questions in JSON format. For each question, produce a document style answer. Each answer must: Be informative regarding the question. Return all answers in JSON format with the keys answer1, answer2, and answer3. For example: {{"answer1": "...", "answer2": "...", "answer3": "..."}}
    user: |
      Questions to answer: "{questions}"

- id: qa_expand.refine.v1
  method_family: qa_expand
  version: 1
  introduced_by: "Refine final reformulation"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["refinement"]
  template:
    system: |
      You are an evaluation assistant. You have an initial query and answers provided in JSON format. Your role is to check how relevant and correct each answer is. Return only those answers that are relevant and correct to the initial query. Omit or leave blank any that are incorrect, irrelevant, or too vague. If needed, please rewrite the answer in a better way. Return your result in JSON with the same structure: {{"answer1": "Relevant/correct...", "answer2": "Relevant/correct...", "answer3": "Relevant/correct..."}} If an answer is irrelevant, do not include it at all or leave it empty. Focus on ensuring the final JSON only contains the best content for retrieval.
    user: |
      Initial query: "{query}"
      Answers: "{answers}"

- id: mugi.zeroshot.v1
  method_family: mugi
  version: 1
  introduced_by: "MuGI PassageGenGPT prompt"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["pseudo-document", "mugi", "zeroshot"]
  template:
    system: |
      You are PassageGenGPT, an AI capable of generating concise, informative, and clear pseudo passages on specific topics.
    user: |
      Generate one passage that is relevant to the following query: '{query}'. The passage should be concise, informative, and clear
    assistant: |
      Sure, here's a passage relevant to the query:
  notes: |
    MuGI-style prompt with assistant priming for passage generation.

- id: mugi.fewshot.v1
  method_family: mugi
  version: 1
  introduced_by: "MuGI few-shot pseudo-document generation"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["pseudo-document", "mugi", "fewshot"]
  template:
    user: |
      query: how long is life cycle of flea?
      document: The life cycle of a flea typically lasts around 2-3 months, although it can vary depending on environmental conditions. Fleas undergo complete metamorphosis, which consists of four stages: egg, larva, pupa, and adult. The entire life cycle can be completed in as little as 2 weeks under ideal conditions. Flea eggs are laid on the host animal and then fall off into the environment, where they hatch into larvae. The larvae feed on organic matter and develop into pupae, which eventually emerge as adult fleas. Adult fleas then seek a host to feed on and reproduce, starting the cycle anew. It's important to note that proper flea control measures are necessary to prevent infestations and ensure the well-being of both pets and humans.

      query: cost of interior concrete flooring?
      document: The cost of interior concrete flooring can vary depending on several factors. On average, the cost can range from $2 to $12 per square foot. Factors that can influence the cost include the complexity of the design, the type of concrete finish desired, and any additional treatments or coatings. Basic concrete flooring tends to be more affordable, while decorative options like stamped or stained concrete can be more expensive. It's important to consider the long-term benefits of concrete flooring, such as its durability and low maintenance requirements, when evaluating the overall cost. Additionally, consulting with a professional contractor can provide a more accurate estimate based on your specific project requirements.

      query: {query}
      document: 
  notes: |
    MuGI few-shot prompt with 2 in-context examples for pseudo-document generation. Performed worse than MuGI zeroshot in experiments (for DL19 NDCG@10).

- id: lamer.msmarco.v1
  method_family: lamer
  version: 1
  introduced_by: "LameR passage synthesis for MS MARCO V1 Passage"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["passage-synthesis", "context-based", "dl19", "dl20", "msmarco", "dev_small"]
  template:
    user: |
      Give a question "{query}" and its possible answering passages (most of these passages are wrong) enumerated as:
      {contexts}
      please write a correct answering passage.
  notes: |
    LameR uses retrieved contexts to synthesize a correct answering passage. Used for MS MARCO V1 Passage datasets.

- id: lamer.scifact.v1
  method_family: lamer
  version: 1
  introduced_by: "LameR passage synthesis for SciFact"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["passage-synthesis", "context-based", "scientific", "scifact"]
  template:
    user: |
      Give a question "{query}" and its possible scientific paper passages (most of these passages are wrong) enumerated as:
      {contexts}
      please write a correct scientific paper passage.
  notes: |
    LameR variant for scientific fact verification. Tailored for SciFact dataset with scientific paper passages.

- id: lamer.arguana.v1
  method_family: lamer
  version: 1
  introduced_by: "LameR passage synthesis for ArguAna"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["passage-synthesis", "context-based", "argumentation", "arguana"]
  template:
    user: |
      Give a question "{query}" and its possible counter-argument passages (most of these passages are wrong) enumerated as:
      {contexts}
      please write a correct counter-argument passage.
  notes: |
    LameR variant for counter-argument retrieval. Tailored for ArguAna dataset with counter-argument passages.

- id: lamer.trec_covid.v1
  method_family: lamer
  version: 1
  introduced_by: "LameR passage synthesis for TREC-COVID"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["passage-synthesis", "context-based", "scientific", "trec-covid", "covid"]
  template:
    user: |
      Give a question "{query}" and its possible scientific paper passages (most of these passages are wrong) enumerated as:
      {contexts}
      please write a correct scientific paper passage.
  notes: |
    LameR variant for COVID-19 scientific literature. Tailored for TREC-COVID dataset with scientific paper passages.

- id: lamer.fiqa.v1
  method_family: lamer
  version: 1
  introduced_by: "LameR passage synthesis for FiQA"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["passage-synthesis", "context-based", "financial", "fiqa"]
  template:
    user: |
      Give a question "{query}" and its possible answering financial article passages (most of these passages are wrong) enumerated as:
      {contexts}
      please write a correct answering financial article passage.
  notes: |
    LameR variant for financial question answering. Tailored for FiQA dataset with financial article passages.

- id: lamer.dbpedia.v1
  method_family: lamer
  version: 1
  introduced_by: "LameR passage synthesis for DBPedia"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["passage-synthesis", "context-based", "dbpedia"]
  template:
    user: |
      Give a question "{query}" and its possible answering passages (most of these passages are wrong) enumerated as:
      {contexts}
      please write a correct answering passage.
  notes: |
    LameR variant for DBPedia entity retrieval. General answering passages for knowledge base queries.

- id: lamer.trec_news.v1
  method_family: lamer
  version: 1
  introduced_by: "LameR passage synthesis for TREC-News"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["passage-synthesis", "context-based", "news", "trec-news"]
  template:
    user: |
      Give a question "{query}" and its possible relevant passages (most of these passages are wrong) enumerated as:
      {contexts}
      please write a correct relevant passage.
  notes: |
    LameR variant for news article retrieval. Tailored for TREC-News dataset with relevant news passages.

- id: keqe.v1
  method_family: keqe
  version: 1
  introduced_by: "KEQE passage generation (zero-shot)"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["passage-generation", "zeroshot", "knowledge-based"]
  template:
    system: |
      You are a helpful assistant.
    user: |
      Please write a passage to answer the question
      Question: {query}
      Passage:
  notes: |
    KEQE (Knowledge-based Query Expansion) generates passages using the LLM's internal knowledge without retrieved contexts.

- id: csqe.v1
  method_family: csqe
  version: 1
  introduced_by: "CSQE key sentence extraction (few-shot with example)"
  license: "CC-BY-4.0"
  authors: ["queryGym Team"]
  tags: ["context-based", "extraction", "relevance", "fewshot"]
  template:
    system: |
      You are an efficient search assistant. I will provide you with a query and its initially retrieved documents.
      You will begin by examining the initially retrieved documents and identifying the ones that are relevant, even partially, to the query.
      Once the relevant documents are identified, you will extract the key sentences from each document that contribute to their relevance.
    user: |
      Query: "how are some sharks warm blooded"
      Retrieved documents:
      1. Most sharks are cold-blooded. Some, like the Mako and the Great white shark, are partially warmblooded (they are endotherms). Cold blooded although if you've ever seen a Great White Shark hunt sea lions you'd be thinking they would have to be hotblooded. Actually the Salmon Shark is a warm blooded shark.
      2. Are sharks cold-blooded or warm-blooded? Sharks have a reputation as cold-blooded and despite how negative that term is, it is not entirely inaccurate. Sharks are by no means evil, vicious killers like that quote suggests. Nonetheless, sharks are, for the most part anyways, efficient ectothermic predators. Endo vs Ecto.
      3. Great white sharks are some of the only warm blooded sharks. This allows them to swim in colder waters in addition to warm, tropical waters. Great White sharks can be found asâ¦ north as Alaska and as south as the southern tip of South America. They exist worldwide, everywhere in-between. 5 people found this useful.
      4. Sharks' blood gives them turbo speed. Several species of shark and tuna have something special going on inside their bodies. For a long time, scientists have known that some fish species appear warm-blooded. Salmon sharks can elevate their body temperatures by up to 20 degrees compared to the surrounding water, for example.

      You will begin by examining the initially retrieved documents and identifying the ones that are relevant, even partially, to the query. Once the relevant documents are identified, you will extract the key sentences from each document that contribute to their relevance.
    assistant: |
      Based on the query "how are some sharks warm blooded", I have examined the initially retrieved documents. Here are the relevant documents and the key sentences extracted from each: 
      Document 1:
      "Most sharks are cold-blooded. Some, like the Mako and the Great white shark, are partially warm-blooded (they are endotherms)."
      "Actually, the Salmon Shark is a warm-blooded shark."

      Document 3:
      "Great white sharks are some of the only warm-blooded sharks."
      "This allows them to swim in colder waters in addition to warm, tropical waters."

      Document 4:
      "Salmon sharks can elevate their body temperatures by up to 20 degrees compared to the surrounding water, for example."
    user: |
      Query: "{query}"
      Retrieved documents:
      {contexts}

      You will begin by examining the initially retrieved documents and identifying the ones that are relevant, even partially, to the query. Once the relevant documents are identified, you will extract the key sentences from each document that contribute to their relevance.
  notes: |
    CSQE (Context-based Sentence-level Query Expansion) with few-shot example. Extracts key relevant sentences from retrieved documents to enhance the query. Includes one example demonstration for better performance.
